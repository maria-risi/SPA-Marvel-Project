"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require('@angular/core');
var ColumnComponent = (function () {
    function ColumnComponent(element, renderer) {
        this.element = element;
        this.renderer = renderer;
        // Sizes
        this.xs = null;
        this.sm = null;
        this.md = null;
        this.lg = null;
        this.xl = null;
        // Offset Left
        this.xsOffset = null;
        this.smOffset = null;
        this.mdOffset = null;
        this.lgOffset = null;
        // Offset Right
        // @Input() xsOffsetRight: number = null;
        // @Input() smOffsetRight: number = null;
        // @Input() mdOffsetRight: number = null;
        // @Input() lgOffsetRight: number = null;
        // Pull
        this.xsPull = null;
        this.smPull = null;
        this.mdPull = null;
        this.lgPull = null;
        // Push
        this.xsPush = null;
        this.smPush = null;
        this.mdPush = null;
        this.lgPush = null;
    }
    ColumnComponent.prototype.ngOnInit = function () {
        this.setSize();
        this.setOffset();
        this.setPull();
        this.setPush();
    };
    ColumnComponent.prototype.setSize = function () {
        var allZero = true;
        if (this.xs) {
            allZero = false;
            this.setColumnClass('col', this.xs);
        }
        if (this.sm) {
            allZero = false;
            this.setColumnClass('col-sm', this.sm);
        }
        if (this.md) {
            allZero = false;
            this.setColumnClass('col-md', this.md);
        }
        if (this.lg) {
            allZero = false;
            this.setColumnClass('col-lg', this.lg);
        }
        if (this.xl) {
            allZero = false;
            this.setColumnClass('col-xl', this.xl);
        }
        if (allZero) {
            this.setColumnClass('col-auto');
        }
    };
    ColumnComponent.prototype.setOffset = function () {
        if (this.xsOffset) {
            this.setColumnClass('offset', this.xsOffset);
        }
        if (this.smOffset) {
            this.setColumnClass('offset-sm', this.smOffset);
        }
        if (this.mdOffset) {
            this.setColumnClass('offset-md', this.mdOffset);
        }
        if (this.lgOffset) {
            this.setColumnClass('offset-lg', this.lgOffset);
        }
    };
    ColumnComponent.prototype.setPull = function () {
        if (this.xsPull) {
            this.setColumnClass('pull', this.xsPull);
        }
        if (this.smPull) {
            this.setColumnClass('pull-sm', this.smPull);
        }
        if (this.mdPull) {
            this.setColumnClass('pull-md', this.mdPull);
        }
        if (this.lgPull) {
            this.setColumnClass('pull-lg', this.lgPull);
        }
    };
    ColumnComponent.prototype.setPush = function () {
        if (this.xsPush) {
            this.setColumnClass('push', this.xsPush);
        }
        if (this.smPush) {
            this.setColumnClass('push-sm', this.smPush);
        }
        if (this.mdPush) {
            this.setColumnClass('push-md', this.mdPush);
        }
        if (this.lgPush) {
            this.setColumnClass('push-lg', this.lgPush);
        }
    };
    ColumnComponent.prototype.setColumnClass = function (sizeName, size) {
        var colClass = sizeName;
        if (size)
            colClass += '-' + size;
        this.renderer.setElementClass(this.element.nativeElement, colClass, true);
    };
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Number)
    ], ColumnComponent.prototype, "xs", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Number)
    ], ColumnComponent.prototype, "sm", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Number)
    ], ColumnComponent.prototype, "md", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Number)
    ], ColumnComponent.prototype, "lg", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Number)
    ], ColumnComponent.prototype, "xl", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Number)
    ], ColumnComponent.prototype, "xsOffset", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Number)
    ], ColumnComponent.prototype, "smOffset", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Number)
    ], ColumnComponent.prototype, "mdOffset", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Number)
    ], ColumnComponent.prototype, "lgOffset", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Number)
    ], ColumnComponent.prototype, "xsPull", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Number)
    ], ColumnComponent.prototype, "smPull", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Number)
    ], ColumnComponent.prototype, "mdPull", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Number)
    ], ColumnComponent.prototype, "lgPull", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Number)
    ], ColumnComponent.prototype, "xsPush", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Number)
    ], ColumnComponent.prototype, "smPush", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Number)
    ], ColumnComponent.prototype, "mdPush", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Number)
    ], ColumnComponent.prototype, "lgPush", void 0);
    ColumnComponent = __decorate([
        core_1.Component({
            selector: 'column',
            template: '<ng-content></ng-content>',
            encapsulation: core_1.ViewEncapsulation.None
        }), 
        __metadata('design:paramtypes', [core_1.ElementRef, core_1.Renderer])
    ], ColumnComponent);
    return ColumnComponent;
}());
exports.ColumnComponent = ColumnComponent;
//# sourceMappingURL=column.component.js.map