"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require('@angular/core');
var AlignLeftDirective = (function () {
    function AlignLeftDirective(element, renderer) {
        this.element = element;
        this.renderer = renderer;
    }
    AlignLeftDirective.prototype.ngOnInit = function () {
        this.renderer.setElementStyle(this.element.nativeElement, 'text-align', 'left');
    };
    AlignLeftDirective = __decorate([
        core_1.Directive({
            selector: 'column[left]'
        }), 
        __metadata('design:paramtypes', [core_1.ElementRef, core_1.Renderer])
    ], AlignLeftDirective);
    return AlignLeftDirective;
}());
exports.AlignLeftDirective = AlignLeftDirective;
var AlignRightDirective = (function () {
    function AlignRightDirective(element, renderer) {
        this.element = element;
        this.renderer = renderer;
    }
    AlignRightDirective.prototype.ngOnInit = function () {
        this.renderer.setElementStyle(this.element.nativeElement, 'text-align', 'right');
    };
    AlignRightDirective = __decorate([
        core_1.Directive({
            selector: 'column[right]'
        }), 
        __metadata('design:paramtypes', [core_1.ElementRef, core_1.Renderer])
    ], AlignRightDirective);
    return AlignRightDirective;
}());
exports.AlignRightDirective = AlignRightDirective;
var AlignCenterDirective = (function () {
    function AlignCenterDirective(element, renderer) {
        this.element = element;
        this.renderer = renderer;
    }
    AlignCenterDirective.prototype.ngOnInit = function () {
        this.renderer.setElementStyle(this.element.nativeElement, 'text-align', 'center');
    };
    AlignCenterDirective = __decorate([
        core_1.Directive({
            selector: 'column[center]'
        }), 
        __metadata('design:paramtypes', [core_1.ElementRef, core_1.Renderer])
    ], AlignCenterDirective);
    return AlignCenterDirective;
}());
exports.AlignCenterDirective = AlignCenterDirective;
var AlignCenterLeftDirective = (function () {
    function AlignCenterLeftDirective(element, renderer) {
        this.element = element;
        this.renderer = renderer;
    }
    AlignCenterLeftDirective.prototype.ngOnInit = function () {
        this.renderer.setElementStyle(this.element.nativeElement, 'text-align', 'left');
        this.renderer.setElementStyle(this.element.nativeElement, 'margin-left', 'auto');
        this.renderer.setElementStyle(this.element.nativeElement, 'margin-right', 'auto');
    };
    AlignCenterLeftDirective = __decorate([
        core_1.Directive({
            selector: 'column[centerLeft]'
        }), 
        __metadata('design:paramtypes', [core_1.ElementRef, core_1.Renderer])
    ], AlignCenterLeftDirective);
    return AlignCenterLeftDirective;
}());
exports.AlignCenterLeftDirective = AlignCenterLeftDirective;
var AlignCenterRightDirective = (function () {
    function AlignCenterRightDirective(element, renderer) {
        this.element = element;
        this.renderer = renderer;
    }
    AlignCenterRightDirective.prototype.ngOnInit = function () {
        this.renderer.setElementStyle(this.element.nativeElement, 'text-align', 'right');
        this.renderer.setElementStyle(this.element.nativeElement, 'margin-left', 'auto');
        this.renderer.setElementStyle(this.element.nativeElement, 'margin-right', 'auto');
    };
    AlignCenterRightDirective = __decorate([
        core_1.Directive({
            selector: 'column[centerRight]'
        }), 
        __metadata('design:paramtypes', [core_1.ElementRef, core_1.Renderer])
    ], AlignCenterRightDirective);
    return AlignCenterRightDirective;
}());
exports.AlignCenterRightDirective = AlignCenterRightDirective;
//# sourceMappingURL=alignments.directive.js.map